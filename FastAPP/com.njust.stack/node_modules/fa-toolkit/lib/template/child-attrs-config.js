"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var _style=require("../style"),_utils=require("../utils"),REGEXP_URI=/^\s*[']?\s*([^()]+?)\s*[']?\s*$/,REGEXP_NUMBER=/^[-+]?[0-9]*\.?[0-9]+$/,logTypes=["NOTE","WARNING","ERROR"],validator={string:function(e){return"string"==typeof e?{value:e}:{value:!1,reason:function(e,r){return"ERROR: Attribute  `"+e+"` value `"+r+"` is invalid."}}},opacity:function(e){var r=(e=(e||"").toString()).match(REGEXP_NUMBER);return r&&!r[1]?0<=parseFloat(e)&&parseFloat(e)<=1?{value:parseFloat(e)}:{value:null,reason:function(e,r){return"ERROR: Attribute `"+e+"` value `"+r+"` has exceeded the threshold."}}:{value:null,reason:function(e,r){return"ERROR: Attribute `"+_utils.camelCaseToHyphened(e)+"` value `"+r+"`  is invalid (the value can only be a digit)."}}},uri:function(e){e=(e||"").toString().trim();var r=REGEXP_URI.exec(e);return r?{value:r[1]}:{value:null,reason:function(e,r){return"WARNING: An error occurred when parsing attribute `"+_utils.camelCaseToHyphened(e)+"."}}},objectAnchor:function(r){if("object"!==_typeof(r))return{value:!1,reason:function(e,r){return"ERROR: Attribute `"+e+"` value is invalid (the value must be an object)."}};var t=[],a=[];return Object.keys(r).forEach(function(e){t.push(e),a.push(r[e])}),"x"!==t[0]||"y"!==t[1]?{value:!1,reason:function(e,r){return"ERROR: Attribute `"+e+"` value is invalid."}}:a[0]<0||1<a[0]||a[1]<0||1<a[1]?{value:!1,reason:function(e,r){return"ERROR: Attribute `"+e+"` has exceeded the threshold."}}:{value:r}},markers:function markers(value){try{var valueArr=eval("("+value+")")}catch(e){return{value:!1,reason:function(e,r){return"ERROR: An error occurred when parsing the markers attribute of the map component."}}}var markersRequireMap=[],markersDefMap=[];Object.keys(markersValidatorMap).forEach(function(e){markersValidatorMap[e].require&&markersRequireMap.push(e),markersValidatorMap[e].def&&markersDefMap.push(markersValidatorMap[e].def)});for(var resultBuilder={},reasonBuilder=[],errLevel=0,_loop=function(v){var c=[].concat(markersRequireMap);Object.keys(valueArr[v]).forEach(function(e){if(void 0!==markersValidatorMap[e]){if(-1!==c.indexOf(e)){var r=c.indexOf(e);c.splice(r,1)}var t=markersValidatorMap[e].type;if("function"==typeof t){var a=t(valueArr[v][e]);if("number"!=typeof a.value&&"string"!=typeof a.value||(resultBuilder[e]=a.value),a.reason){var i=a.reason(e,valueArr[v][e]),o=i.match(/^([A-Z]+):/);if(o){var n=logTypes.indexOf(o[1]);errLevel<n&&(errLevel=n),i=i.replace(o[0],"")}reasonBuilder.push(i)}}if("string"==typeof t){var l=_style.validator[t];if("function"==typeof l){var u=l(valueArr[v][e]);if(u&&u.reason){resultBuilder[e]=u.value;var s=u.reason(e,valueArr[v][e]),p=s.match(/^([A-Z]+):/);if(p){var f=logTypes.indexOf(p[1]);errLevel<f&&(errLevel=f),s=s.replace(p[0],"")}reasonBuilder.push(s)}}}}else errLevel=2,reasonBuilder.push(" Attribute `"+e+"` is not a sub-attribute of markers.")}),0<c.length&&(errLevel=2,reasonBuilder.push(" The mandatory sub-attribute is missing: "+c.join(", ")))},i=0;i<valueArr.length;i++)_loop(i);return{value:_utils.isEmptyObject(resultBuilder)?null:value.toString().replace(/\n\s*/g,""),reason:0<reasonBuilder.length?function(e,r){return logTypes[errLevel]+": Attribute `markers` contains:  \n "+reasonBuilder.join(" \n ")}:null}},markersCallout:function(d){if("object"!==_typeof(d))return{value:!1,reason:function(e,r){return"ERROR: Attribute `"+e+"` value is invalid."}};var y=[],r=[];Object.keys(markersCalloutValidatorMap).forEach(function(e){markersCalloutValidatorMap[e].require&&y.push(e),markersCalloutValidatorMap[e].def&&r.push(markersCalloutValidatorMap[e].def)});var h={},g=[],b=0;return Object.keys(d).forEach(function(e){if(void 0!==markersCalloutValidatorMap[e]){if(-1!==y.indexOf(e)){var r=y.indexOf(e);y.splice(r,1)}var t=markersCalloutValidatorMap[e].type;if("function"==typeof t){var a=t(d[e]);if("number"!=typeof a.value&&"string"!=typeof a.value||(h[e]=a.value),a.reason){var i=a.reason(e,d[e]),o=i.match(/^([A-Z]+):/);if(o){var n=logTypes.indexOf(o[1]);b<n&&(b=n),i=i.replace(o[0],"")}g.push(i)}}if("string"==typeof t){var l=_style.validator[t];if("function"==typeof l){var u=l(d[e]);if(u&&u.reason){h[e]=u.value;var s=u.reason(e,d[e]),p=s.match(/^([A-Z]+):/);if(p){var f=logTypes.indexOf(p[1]);b<f&&(b=f),s=s.replace(p[0],"")}g.push(s)}}}if(Array.isArray(t)){var v=[];for(var c in t)v.push(t[c]);-1===v.indexOf(d[e].toString())&&(b=2,g.push(" Attribute `"+e+"`value `"+d[e]+"` is invalid."))}}else b=2,g.push(" Attribute `"+e+"` is not a sub-attribute of callout.")}),0<y.length&&(b=2,g.push(" The mandatory sub-attribute is missing: "+y.join(", "))),{value:_utils.isEmptyObject(h)?null:h.toString().replace(/\n\s*/g,""),reason:0<g.length?function(e,r){return logTypes[b]+": Attribute `callout` contains: \n  "+g.join("  \n  ")}:null}},markersLabel:function(d){if("object"!==_typeof(d))return{value:!1,reason:function(e,r){return"ERROR: Attribute `"+e+"` value is invalid."}};var y=[],r=[];Object.keys(markersLabelValidatorMap).forEach(function(e){markersLabelValidatorMap[e].require&&y.push(e),markersLabelValidatorMap[e].def&&r.push(markersLabelValidatorMap[e].def)});var h={},g=[],b=0;return Object.keys(d).forEach(function(e){if(void 0!==markersLabelValidatorMap[e]){if(-1!==y.indexOf(e)){var r=y.indexOf(e);y.splice(r,1)}var t=markersLabelValidatorMap[e].type;if("function"==typeof t){var a=t(d[e]);if("number"!=typeof a.value&&"string"!=typeof a.value||(h[e]=a.value),a.reason){var i=a.reason(e,d[e]),o=i.match(/^([A-Z]+):/);if(o){var n=logTypes.indexOf(o[1]);b<n&&(b=n),i=i.replace(o[0],"")}g.push(i)}}if("string"==typeof t){var l=_style.validator[t];if("function"==typeof l){var u=l(d[e]);if(u&&u.reason){h[e]=u.value;var s=u.reason(e,d[e]),p=s.match(/^([A-Z]+):/);if(p){var f=logTypes.indexOf(p[1]);b<f&&(b=f),s=s.replace(p[0],"")}g.push(s)}}}if(Array.isArray(t)){var v=[];for(var c in t)v.push(t[c]);-1===v.indexOf(d[e].toString())&&(b=2,g.push(" Attribute `"+e+"`value `"+d[e]+"` is invalid."))}}else b=2,g.push(" Attribute `"+e+"` is not a sub-attribute of Label.")}),0<y.length&&(b=2,g.push(" The mandatory sub-attribute is missing: "+y.join(", "))),{value:_utils.isEmptyObject(h)?null:h.toString().replace(/\n\s*/g,""),reason:0<g.length?function(e,r){return logTypes[b]+": Attribute `Label` contains: \n  "+g.join("  \n  ")}:null}},polylines:function polylines(value){try{var valueArr=eval("("+value+")")}catch(e){return{value:!1,reason:function(e,r){return"ERROR: An error occurred when parsing the polylines attribute of the map component."}}}var polylinesRequireMap=[],polylinesDefMap=[];Object.keys(polylinesValidatorMap).forEach(function(e){polylinesValidatorMap[e].require&&polylinesRequireMap.push(e),polylinesValidatorMap[e].def&&polylinesDefMap.push(polylinesValidatorMap[e].def)});for(var resultBuilder={},reasonBuilder=[],errLevel=0,_loop2=function(d){var y=[].concat(polylinesRequireMap);Object.keys(valueArr[d]).forEach(function(e){if(void 0!==polylinesValidatorMap[e]){if(-1!==y.indexOf(e)){var r=y.indexOf(e);y.splice(r,1)}var t=polylinesValidatorMap[e].type;if("function"==typeof t){var a=t(valueArr[d][e]);if("number"!=typeof a.value&&"string"!=typeof a.value||(resultBuilder[e]=a.value),a.reason){var i=a.reason(e,valueArr[d][e]),o=i.match(/^([A-Z]+):/);if(o){var n=logTypes.indexOf(o[1]);errLevel<n&&(errLevel=n),i=i.replace(o[0],"")}reasonBuilder.push(i)}}if("string"==typeof t){var l=_style.validator[t];if("function"==typeof l){var u=l(valueArr[d][e]);if(u&&u.reason){resultBuilder[e]=u.value;var s=u.reason(e,valueArr[d][e]),p=s.match(/^([A-Z]+):/);if(p){var f=logTypes.indexOf(p[1]);errLevel<f&&(errLevel=f),s=s.replace(p[0],"")}reasonBuilder.push(s)}}}if(Array.isArray(t)){var v=[];for(var c in t)v.push(t[c]);-1===v.indexOf(valueArr[d][e].toString())&&(errLevel=2,reasonBuilder.push(" Attribute `"+e+"`value `"+valueArr[d][e]+"` is invalid."))}}else errLevel=2,reasonBuilder.push(" Attribute `"+e+"` is not a sub-attribute of polylines.")}),0<y.length&&(errLevel=2,reasonBuilder.push(" The mandatory sub-attribute is missing: "+y.join(", ")))},i=0;i<valueArr.length;i++)_loop2(i);return{value:_utils.isEmptyObject(resultBuilder)?null:value.toString().replace(/\n\s*/g,""),reason:0<reasonBuilder.length?function(e,r){return logTypes[errLevel]+": Attribute `polylines` contains: \n "+reasonBuilder.join(" \n ")}:null}},points:function(d){if(!Array.isArray(d))return{value:!1,reason:function(e,r){return"ERROR: An error occurred when parsing points."}};var r=[],t=[];Object.keys(pointsValidatorMap).forEach(function(e){pointsValidatorMap[e].require&&r.push(e),pointsValidatorMap[e].def&&t.push(pointsValidatorMap[e].def)});for(var y={},h=[],g=0,e=function(v){var c=[].concat(r);Object.keys(d[v]).forEach(function(e){if(void 0!==pointsValidatorMap[e]){if(-1!==c.indexOf(e)){var r=c.indexOf(e);c.splice(r,1)}var t=pointsValidatorMap[e].type;if("function"==typeof t){var a=t(d[v][e]);if("number"!=typeof a.value&&"string"!=typeof a.value||(y[e]=a.value),a.reason){var i=a.reason(e,d[v][e]),o=i.match(/^([A-Z]+):/);if(o){var n=logTypes.indexOf(o[1]);g<n&&(g=n),i=i.replace(o[0],"")}h.push(i)}}if("string"==typeof t){var l=_style.validator[t];if("function"==typeof l){var u=l(d[v][e]);if(u&&u.reason){y[e]=u.value;var s=u.reason(e,d[v][e]),p=s.match(/^([A-Z]+):/);if(p){var f=logTypes.indexOf(p[1]);g<f&&(g=f),s=s.replace(p[0],"")}h.push(s)}}}}else g=2,h.push(" `"+e+"` is not a value of attribute points.")}),0<c.length&&(g=2,h.push(" The mandatory value is missing: "+c.join(", ")))},a=0;a<d.length;a++)e(a);return{value:_utils.isEmptyObject(y)?null:d.toString().replace(/\n\s*/g,""),reason:0<h.length?function(e,r){return logTypes[g]+": Attribute `points` contains: \n "+h.join(" \n ")}:null}},polygons:function polygons(value){try{var valueArr=eval("("+value+")")}catch(e){return{value:!1,reason:function(e,r){return"ERROR: An error occurred when parsing the `polygons` attribute of the map component."}}}var polygonsRequireMap=[],polygonsDefMap=[];Object.keys(polygonsValidatorMap).forEach(function(e){polygonsValidatorMap[e].require&&polygonsRequireMap.push(e),polygonsValidatorMap[e].def&&polygonsDefMap.push(polygonsValidatorMap[e].def)});for(var resultBuilder={},reasonBuilder=[],errLevel=0,_loop4=function(d){var y=[].concat(polygonsRequireMap);Object.keys(valueArr[d]).forEach(function(e){if(void 0!==polygonsValidatorMap[e]){if(-1!==y.indexOf(e)){var r=y.indexOf(e);y.splice(r,1)}var t=polygonsValidatorMap[e].type;if("function"==typeof t){var a=t(valueArr[d][e]);if("number"!=typeof a.value&&"string"!=typeof a.value||(resultBuilder[e]=a.value),a.reason){var i=a.reason(e,valueArr[d][e]),o=i.match(/^([A-Z]+):/);if(o){var n=logTypes.indexOf(o[1]);errLevel<n&&(errLevel=n),i=i.replace(o[0],"")}reasonBuilder.push(i)}}if("string"==typeof t){var l=_style.validator[t];if("function"==typeof l){var u=l(valueArr[d][e]);if(u&&u.reason){resultBuilder[e]=u.value;var s=u.reason(e,valueArr[d][e]),p=s.match(/^([A-Z]+):/);if(p){var f=logTypes.indexOf(p[1]);errLevel<f&&(errLevel=f),s=s.replace(p[0],"")}reasonBuilder.push(s)}}}if(Array.isArray(t)){var v=[];for(var c in t)v.push(t[c]);-1===v.indexOf(valueArr[d][e].toString())&&(errLevel=2,reasonBuilder.push(" Attribute `"+e+"`value `"+valueArr[d][e]+"` is invalid."))}}else errLevel=2,reasonBuilder.push(" Attribute `"+e+"` is not a sub-attribute of polygons.")}),0<y.length&&(errLevel=2,reasonBuilder.push(" The mandatory sub-attribute is missing: "+y.join(", ")))},i=0;i<valueArr.length;i++)_loop4(i);return{value:_utils.isEmptyObject(resultBuilder)?null:value.toString().replace(/\n\s*/g,""),reason:0<reasonBuilder.length?function(e,r){return logTypes[errLevel]+": Attribute `polygons` contains: \n "+reasonBuilder.join(" \n ")}:null}},circles:function circles(value){try{var valueArr=eval("("+value+")")}catch(e){return{value:!1,reason:function(e,r){return"ERROR: An error occurred when parsing the circles attribute of the map component."}}}var circlesRequireMap=[],circlesDefMap=[];Object.keys(circlesValidatorMap).forEach(function(e){circlesValidatorMap[e].require&&circlesRequireMap.push(e),circlesValidatorMap[e].def&&circlesDefMap.push(circlesValidatorMap[e].def)});for(var resultBuilder={},reasonBuilder=[],errLevel=0,_loop5=function(v){var c=[].concat(circlesRequireMap);Object.keys(valueArr[v]).forEach(function(e){if(void 0!==circlesValidatorMap[e]){if(-1!==c.indexOf(e)){var r=c.indexOf(e);c.splice(r,1)}var t=circlesValidatorMap[e].type;if("function"==typeof t){var a=t(valueArr[v][e]);if("number"!=typeof a.value&&"string"!=typeof a.value||(resultBuilder[e]=a.value),a.reason){var i=a.reason(e,valueArr[v][e]),o=i.match(/^([A-Z]+):/);if(o){var n=logTypes.indexOf(o[1]);errLevel<n&&(errLevel=n),i=i.replace(o[0],"")}reasonBuilder.push(i)}}if("string"==typeof t){var l=_style.validator[t];if("function"==typeof l){var u=l(valueArr[v][e]);if(u&&u.reason){resultBuilder[e]=u.value;var s=u.reason(e,valueArr[v][e]),p=s.match(/^([A-Z]+):/);if(p){var f=logTypes.indexOf(p[1]);errLevel<f&&(errLevel=f),s=s.replace(p[0],"")}reasonBuilder.push(s)}}}}else errLevel=2,reasonBuilder.push(" Attribute `"+e+"` is not a sub-attribute of circles.")}),0<c.length&&(errLevel=2,reasonBuilder.push(" The mandatory sub-attribute is missing: "+c.join(", ")))},i=0;i<valueArr.length;i++)_loop5(i);return{value:_utils.isEmptyObject(resultBuilder)?null:value.toString().replace(/\n\s*/g,""),reason:0<reasonBuilder.length?function(e,r){return logTypes[errLevel]+": Attribute `circles` contains: \n "+reasonBuilder.join(" \n ")}:null}},controls:function controls(value){try{var valueArr=eval("("+value+")")}catch(e){return{value:!1,reason:function(e,r){return"ERROR: An error occurred when parsing the controls attribute of the map component. "}}}var controlsRequireMap=[],controlsDefMap=[];Object.keys(controlsValidatorMap).forEach(function(e){controlsValidatorMap[e].require&&controlsRequireMap.push(e),controlsValidatorMap[e].def&&controlsDefMap.push(controlsValidatorMap[e].def)});for(var resultBuilder={},reasonBuilder=[],errLevel=0,_loop6=function(d){var y=[].concat(controlsRequireMap);Object.keys(valueArr[d]).forEach(function(e){if(void 0!==controlsValidatorMap[e]){if(-1!==y.indexOf(e)){var r=y.indexOf(e);y.splice(r,1)}var t=controlsValidatorMap[e].type;if("function"==typeof t){var a=t(valueArr[d][e]);if("number"!=typeof a.value&&"string"!=typeof a.value||(resultBuilder[e]=a.value),a.reason){var i=a.reason(e,valueArr[d][e]),o=i.match(/^([A-Z]+):/);if(o){var n=logTypes.indexOf(o[1]);errLevel<n&&(errLevel=n),i=i.replace(o[0],"")}reasonBuilder.push(i)}}if("string"==typeof t){var l=_style.validator[t];if("function"==typeof l){var u=l(valueArr[d][e]);if(u&&u.reason){resultBuilder[e]=u.value;var s=u.reason(e,valueArr[d][e]),p=s.match(/^([A-Z]+):/);if(p){var f=logTypes.indexOf(p[1]);errLevel<f&&(errLevel=f),s=s.replace(p[0],"")}reasonBuilder.push(s)}}}if(Array.isArray(t)){var v=[];for(var c in t)v.push(t[c]);-1===v.indexOf(valueArr[d][e].toString())&&(errLevel=2,reasonBuilder.push(" Attribute `"+e+"`value `"+valueArr[d][e]+"` is invalid."))}}else errLevel=2,reasonBuilder.push(" Attribute `"+e+"` is not a sub-attribute of controls.")}),0<y.length&&(errLevel=2,reasonBuilder.push(" The mandatory sub-attribute is missing: "+y.join(", ")))},i=0;i<valueArr.length;i++)_loop6(i);return{value:_utils.isEmptyObject(resultBuilder)?null:value.toString().replace(/\n\s*/g,""),reason:0<reasonBuilder.length?function(e,r){return logTypes[errLevel]+": Attribute `controls` contains: \n "+reasonBuilder.join(" \n ")}:null}},position:function(u){if("object"!==_typeof(u))return{value:!1,reason:function(e,r){return"ERROR: Attribute `"+e+"` value is invalid."}};var s=[],r=[];Object.keys(controlsPositionValidatorMap).forEach(function(e){controlsPositionValidatorMap[e].require&&s.push(e),controlsPositionValidatorMap[e].def&&r.push(controlsPositionValidatorMap[e].def)});var p={},f=[],v=0;return Object.keys(u).forEach(function(e){if(void 0!==controlsPositionValidatorMap[e]){if(-1!==s.indexOf(e)){var r=s.indexOf(e);s.splice(r,1)}var t=controlsPositionValidatorMap[e].type;if("string"==typeof t){var a=_style.validator[t];if("function"==typeof a){var i=a(u[e]);if(i&&i.reason){p[e]=i.value;var o=i.reason(e,u[e]),n=o.match(/^([A-Z]+):/);if(n){var l=logTypes.indexOf(n[1]);v<l&&(v=l),o=o.replace(n[0],"")}f.push(o)}}}}else v=2,f.push(" Attribute `"+e+"` is not a sub-attribute of controls-position.")}),0<s.length&&(v=2,f.push(" The mandatory sub-attribute is missing: "+s.join(", "))),{value:_utils.isEmptyObject(p)?null:p.toString().replace(/\n\s*/g,""),reason:0<f.length?function(e,r){return logTypes[v]+": Attribute `controls-position` contains: \n  "+f.join("  \n  ")}:null}},groundoverlays:function groundoverlays(value){try{var valueArr=eval("("+value+")")}catch(e){return{value:!1,reason:function(e,r){return"ERROR: An error occurred when parsing the groundoverlays attribute of the map component."}}}var groundoverlaysRequireMap=[],groundoverlaysDefMap=[];Object.keys(groundoverlaysValidatorMap).forEach(function(e){groundoverlaysValidatorMap[e].require&&groundoverlaysRequireMap.push(e),groundoverlaysValidatorMap[e].def&&groundoverlaysDefMap.push(groundoverlaysValidatorMap[e].def)});for(var resultBuilder={},reasonBuilder=[],errLevel=0,_loop7=function(d){var y=[].concat(groundoverlaysRequireMap);Object.keys(valueArr[d]).forEach(function(e){if(void 0!==groundoverlaysValidatorMap[e]){if(-1!==y.indexOf(e)){var r=y.indexOf(e);y.splice(r,1)}var t=groundoverlaysValidatorMap[e].type;if("function"==typeof t){var a=t(valueArr[d][e]);if("number"!=typeof a.value&&"string"!=typeof a.value||(resultBuilder[e]=a.value),a.reason){var i=a.reason(e,valueArr[d][e]),o=i.match(/^([A-Z]+):/);if(o){var n=logTypes.indexOf(o[1]);errLevel<n&&(errLevel=n),i=i.replace(o[0],"")}reasonBuilder.push(i)}}if("string"==typeof t){var l=_style.validator[t];if("function"==typeof l){var u=l(valueArr[d][e]);if(u&&u.reason){resultBuilder[e]=u.value;var s=u.reason(e,valueArr[d][e]),p=s.match(/^([A-Z]+):/);if(p){var f=logTypes.indexOf(p[1]);errLevel<f&&(errLevel=f),s=s.replace(p[0],"")}reasonBuilder.push(s)}}}if(Array.isArray(t)){var v=[];for(var c in t)v.push(t[c]);-1===v.indexOf(valueArr[d][e].toString())&&(errLevel=2,reasonBuilder.push(" Attribute `"+e+"`value `"+valueArr[d][e]+"` is invalid."))}}else errLevel=2,reasonBuilder.push(" Attribute `"+e+"` is not a sub-attribute of groundoverlays.")}),0<y.length&&(errLevel=2,reasonBuilder.push(" The mandatory sub-attribute is missing: "+y.join(", ")))},i=0;i<valueArr.length;i++)_loop7(i);return{value:_utils.isEmptyObject(resultBuilder)?null:value.toString().replace(/\n\s*/g,""),reason:0<reasonBuilder.length?function(e,r){return logTypes[errLevel]+": Attribute `groundoverlays` contains: \n "+reasonBuilder.join(" \n ")}:null}},objectEast:function(u){if("object"!==_typeof(u))return{value:!1,reason:function(e,r){return"ERROR: Attribute `"+e+"` value is invalid."}};var s=[],r=[];Object.keys(objectEastValidatorMap).forEach(function(e){objectEastValidatorMap[e].require&&s.push(e),objectEastValidatorMap[e].def&&r.push(objectEastValidatorMap[e].def)});var p={},f=[],v=0;return Object.keys(u).forEach(function(e){if(void 0!==objectEastValidatorMap[e]){if(-1!==s.indexOf(e)){var r=s.indexOf(e);s.splice(r,1)}var t=objectEastValidatorMap[e].type;if("string"==typeof t){var a=_style.validator[t];if("function"==typeof a){var i=a(u[e]);if(i&&i.reason){p[e]=i.value;var o=i.reason(e,u[e]),n=o.match(/^([A-Z]+):/);if(n){var l=logTypes.indexOf(n[1]);v<l&&(v=l),o=o.replace(n[0],"")}f.push(o)}}}}else v=2,f.push(" `"+e+"`is not a value of attribute northEast or southWest.")}),0<s.length&&(v=2,f.push(" The mandatory value is missing: "+s.join(", "))),{value:_utils.isEmptyObject(p)?null:p.toString().replace(/\n\s*/g,""),reason:0<f.length?function(e,r){return logTypes[v]+": Attribute `northEast or southWest` contains:  \n  "+f.join("  \n  ")}:null}}},markersValidatorMap={id:{type:"number",require:!1,def:-1},latitude:{type:"number",require:!0},longitude:{type:"number",require:!0},offsetX:{type:"number",require:!1},offsetY:{type:"number",require:!1},coordType:{type:validator.string,require:!1},title:{type:validator.string,require:!1},iconPath:{type:validator.uri,require:!0},opacity:{type:validator.opacity,require:!1,def:1},rotate:{type:"number",require:!1,def:0},width:{type:"length",require:!1},height:{type:"length",require:!1},anchor:{type:validator.objectAnchor,require:!1,def:{x:.5,y:1}},callout:{type:validator.markersCallout,require:!1},zIndex:{type:"number",require:!1},label:{type:validator.markersLabel,require:!1}},markersLabelValidatorMap={content:{type:validator.string,require:!0},color:{type:"color",require:!1,def:"#000000"},fontSize:{type:"length",require:!1,def:"30px"},anchorX:{type:"number",require:!1,def:0},anchorY:{type:"number",require:!1,def:0},borderRadius:{type:"length",require:!1,def:"0px"},padding:{type:"length",require:!1,def:"0px"},backgroundColor:{type:"color",require:!1,def:"#00ffffff"},textAlign:{type:["center","left","right"],require:!1}},markersCalloutValidatorMap={content:{type:validator.string,require:!0},color:{type:"color",require:!1,def:"#000000"},fontSize:{type:"length",require:!1,def:"30px"},borderRadius:{type:"length",require:!1,def:"0px"},padding:{type:"length",require:!1,def:"0px"},backgroundColor:{type:"color",require:!1,def:"#ffffff"},display:{type:["byclick","always"],require:!1},textAlign:{type:["center","left","right"],require:!1},converthtml:{type:["false","true"],require:!1}},polylinesValidatorMap={points:{type:validator.points,require:!0},color:{type:"color",require:!1,def:"#666666"},width:{type:"length",require:!1,def:"10px"},dotted:{type:["false","true"],require:!1},zIndex:{type:"number",require:!1},textureLine:{type:["false","true"],require:!1},textureIconPath:{type:validator.string,require:!1}},pointsValidatorMap={latitude:{type:"number",require:!0},longitude:{type:"number",require:!0},coordType:{type:validator.string,require:!1}},polygonsValidatorMap={points:{type:validator.points,require:!0},fillColor:{type:"color",require:!1,def:"#666666"},borderWidth:{type:"length",require:!1,def:"5px"},borderColor:{type:"color",require:!1,def:"#666666"},zIndex:{type:"number",require:!1}},circlesValidatorMap={latitude:{type:"number",require:!0},longitude:{type:"number",require:!0},coordType:{type:validator.string,require:!1},radius:{type:"number",require:!0},fillColor:{type:"color",require:!1,def:"#666666"},borderWidth:{type:"length",require:!1,def:"5px"},borderColor:{type:"color",require:!1,def:"#666666"},zIndex:{type:"number",require:!1}},groundoverlaysValidatorMap={id:{type:"number",require:!1,def:-1},northEast:{type:validator.objectEast,require:!0},southWest:{type:validator.objectEast,require:!0},iconPath:{type:validator.uri,require:!1},opacity:{type:"number",require:!1,def:1},visible:{type:["true","false"],require:!1},zIndex:{type:"number",require:!1}},objectEastValidatorMap={latitude:{type:"number",require:!0},longitude:{type:"number",require:!0},coordType:{type:validator.string,require:!1}},controlsValidatorMap={id:{type:"number",require:!1,def:-1},position:{type:validator.position,require:!1},iconPath:{type:validator.uri,require:!0},clickable:{type:["true","false"],require:!1}},controlsPositionValidatorMap={left:{type:"length",require:!1,def:0},right:{type:"length",require:!1,def:0},top:{type:"length",require:!1,def:0},bottom:{type:"length",require:!1,def:0},width:{type:"length",require:!1,def:0},height:{type:"length",require:!1,def:0}};Object.defineProperty(exports,"__esModule",{value:!0}),module.exports.validator=validator;