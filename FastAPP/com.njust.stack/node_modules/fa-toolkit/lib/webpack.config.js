"use strict";var UglifyJSPlugin=require("uglifyjs-webpack-plugin"),path=require("path"),fs=require("fs"),ZipPlugin=require("./fa-zip-plugin"),ResourcePlugin=require("./resource-plugin"),utils=require("./utils"),webpack=require("webpack");process.noDeprecation=!0;var manifest,FILE_EXT_LIST=[".ux",".wux",".mix"],signFlag="release"===process.env.sign,uglifyjsFlag="true"===process.env.uglifyjs,projectPath=process.env.projectRoot||process.cwd(),rootDir=path.join(projectPath,"src"),manifestPath=path.join(rootDir,"manifest.json");if(!fs.existsSync(manifestPath))throw"ERROR: The manifest file is lost.";var appName=(manifest=JSON.parse(fs.readFileSync(manifestPath).toString()))&&manifest.package||"Bundle",zipPath=path.join(projectPath,"dist"),entry={},destPath="build",zipfiles=[];fs.existsSync(zipPath)&&(zipfiles=fs.readdirSync(zipPath)).forEach(function(e){var t=zipPath+"/"+e;fs.statSync(t).isFile()&&".rpk"===path.extname(t)&&fs.unlinkSync(t)});var router=[],appUxPath=path.join(rootDir,"app.ux"),appMixPath=path.join(rootDir,"app.mix");if(fs.existsSync(appUxPath))router.push(appUxPath);else{if(!fs.existsSync(appMixPath))throw"ERROR: The app.ux file is lost.";router.push(appMixPath)}var versionNum=manifest.minPlatformVersion;if(manifest&&manifest.router){var pages=manifest.router.pages;pages&&Object.keys(pages).forEach(function(e){var t=pages[e],i=t.component||e.toLowerCase();t&&t.component||console.log("WARNINGï¼šRoute information in the manifest.json file is incomplete:  Page '".concat(e,"' does not \n        have the component attribute configured. By default, '").concat(i,"' is used."));var s=path.join(rootDir,e,i);if(fs.existsSync(s+".ux"))router.push(s+".ux");else if(fs.existsSync(s+".wux"))router.push(s+".wux");else{if(!fs.existsSync(s+".mix"))throw"ERROR: Failed to find the file: "+s;router.push(s+".mix")}})}var widgetsPathList=[];if(manifest&&manifest.widgets){var widgets=manifest.widgets;if(0<widgets.length){var dirpath="";widgets.forEach(function(e){dirpath=e.path,widgetsPathList.push(path.join(rootDir,dirpath))})}}!function n(r,p){r=r||".";var u,l=path.join(rootDir,r);fs.readdirSync(l).forEach(function(e){var t=path.join(l,e),i=fs.statSync(t);if(i.isFile()){var s=path.extname(t);0<=FILE_EXT_LIST.indexOf(s)&&!p&&(0===router.length||0<=router.indexOf(t))&&(u=path.join(destPath,r,path.basename(e,s))+".js",entry[u]=t)}else if(i.isDirectory()){var a=path.join(r,e),o=p||"common"===e.toLowerCase();n(a,o)}})}(".",!1);var webpackConfig={entry:entry,output:{path:path.join(projectPath),filename:"[name]"},module:{rules:[{test:/\.(ux|wux|mix)(\?[^?]+)?$/,loaders:[path.resolve(__dirname,"loader.js")]},{test:/\.js/,use:[{loader:path.resolve(__dirname,"fa-module-loader.js")},{loader:utils.loadBabelModule("babel-loader"),options:{presets:[utils.loadBabelModule("@babel/preset-env")],plugins:[utils.loadBabelModule("@babel/plugin-transform-modules-commonjs")]}}],exclude:/node_modules/}]},plugins:[new ResourcePlugin({src:path.join(projectPath,"src"),build:path.join(projectPath,"build")}),new ZipPlugin({name:appName,output:zipPath,src:path.join(projectPath,destPath),sign:signFlag}),new webpack.LoaderOptionsPlugin({options:{versionNum:versionNum,widgetsPathList:widgetsPathList}})],mode:"none",node:{global:!1},stats:{children:!1,chunks:!1,chunkModules:!1,chunkOrigins:!1,modules:!1,version:!1,assets:!1,errors:!1,errorDetails:!1,warnings:!1,hash:!1,timings:!1,builtAt:!1,entrypoints:!1,moduleTrace:!1},resolve:{modules:[path.join(__dirname,"..","node_modules"),path.join(__dirname,"..","..","..","node_modules")]}};uglifyjsFlag?webpackConfig.plugins.push(new UglifyJSPlugin({uglifyOptions:{compress:{}}})):webpackConfig.devtool="inline-cheap-source-map",module.exports=webpackConfig;