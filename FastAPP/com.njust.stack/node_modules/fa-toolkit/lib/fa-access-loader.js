"use strict";var PPP_CONTROL="\nvar moduleOwn = exports.default || module.exports;\nvar accessors = ['public', 'protected', 'private'];\nif (moduleOwn.data && accessors.some(function (acc) {\n    return moduleOwn[acc];\n  })) {\n  throw new Error('For VM objects, attribute data must not coexist with public, protected, or private. Please replace data with public.');\n} else if (!moduleOwn.data) {\n  moduleOwn.data = {};\n  moduleOwn._descriptor = {};\n  accessors.forEach(function(acc) {\n    var accType = typeof moduleOwn[acc];\n    if (accType === 'object') {\n      moduleOwn.data = Object.assign(moduleOwn.data, moduleOwn[acc]);\n      for (var name in moduleOwn[acc]) {\n        moduleOwn._descriptor[name] = {access : acc};\n      }\n    } else if (accType === 'function') {\n      console.warn('For VM objects, attribute ' + acc + ' value must not be a function. Change the value to an object.');\n    }\n  });\n}",_utils=require("./utils"),esprima=require("esprima"),parseOption={tolerant:!0};function checkPPPControl(e,a){var t;try{t=esprima.parse(e,parseOption)}catch(e){return void _utils.logWarn(a,[{reason:"ERROR: script parsing error: "+e}])}var n=t.body;if(n&&0<n.length){for(var r=[],o=n.length-1;0<=o;o--){if(n[o]&&"ExpressionStatement"===n[o].type){var c=n[o].expression&&n[o].expression.left;if(c&&c.object&&"module"===c.object.name&&c.property&&"exports"===c.property.name){r=n[o].expression.right.properties;break}}if(n[o]&&"VariableDeclaration"===n[o].type){var i=n[o].declarations;if(i[0].type&&"VariableDeclarator"===i[0].type&&i[0].id.name&&"_default"===i[0].id.name){r=i[0].init.properties;break}}}checkProperties(r,a)}}function checkProperties(e,a){if(e&&e.length){var n=[],r=[],o=[],c=[];if(e.forEach(function(e){var a=e.key,t=e.value;(a&&a.name||a&&a.value)&&t&&"ObjectExpression"===t.type&&("data"===a.name?n.push(a.name):"public"===a.name|"protected"===a.name|"private"===a.name?r.push(a.name):"public"===a.value|"protected"===a.value|"private"===a.value?r.push(a.value):"props"!==a.name&&"computed"!==a.name&&o.push(a.name)),a&&a.name&&t&&"FunctionExpression"===t.type&&("data"===a.name&&n.push(a.name),"public"===a.name|"protected"===a.name|"private"===a.name&&c.push(a.name))}),1<=n.length&&1<=r.length){var t=[];t.push({reason:"ERROR: For VM objects, attribute data must not coexist with public, protected, or private. Please replace data with public."}),_utils.logWarn(a,t)}if(0<o.length){var i=[];i.push({reason:"ERROR: The page object definition is incorrect. "+o+" allows only for data, props, public, protected, and private."}),_utils.logWarn(a,i)}if(0<c.length){var s=[];s.push({reason:"ERROR: The page object definition is incorrect. "+c+" can only be Object rather than Function."}),_utils.logWarn(a,s)}}}module.exports=function(e){return this.cacheable&&this.cacheable(),checkPPPControl(e,this),e+=PPP_CONTROL};