<template>
    <div class="container">
        <div class="top-content">
            <div class="poster-item">
                <image class="icon" src={{iconuri}} onclick="pickPhoto" onlongpress="viewPhoto"></image>
                <a class="a_item">个人信息</a>
            </div>
            <div class="account-item">
                <text class="account-subtitle">姓名</text>
                <input class="account-input" onfocus="onFocusName" onblur="onBlur" maxlength="20" border-bottom-color={{focusItem===0?"#0066ff":"#cccccc"}} onchange="getName" placeholder={{infos.name}} ></input>
            </div>
            <div class="account-item">
                <text class="account-subtitle">用户名</text>
                <input class="account-input" onfocus="onFocusUserName" onblur="onBlur" maxlength="20" border-bottom-color={{focusItem===1?"#0066ff":"#cccccc"}} onchange="getUserName" placeholder={{infos.username}} ></input>
            </div>
            <div class="account-item">
                <text class="account-subtitle">Email</text>
                <input class="account-input" onfocus="onFocusEmail" onblur="onBlur" border-bottom-color={{focusItem===2?"#0066ff":"#cccccc"}} onchange="getEmail" placeholder={{infos.email}} ></input>
            </div>
            <div class="account-item">
                <text class="account-subtitle">经历</text>
                <input class="account-input" onfocus="onFocusBio" onblur="onBlur" maxlength="100" border-bottom-color={{focusItem===3?"#0066ff":"#cccccc"}} onchange="getBio" placeholder={{infos.bio}} ></input>
            </div>
            <div class="account-item">
                <text class="account-subtitle">性别</text>
                <select style="font-size:29.3px;" class="selection" onchange="getGender" >
                    <option style="color:#666666;font-size:27.3px;" value="{{false}}" selected="{{infos.gender===false}}">先生</option>
                    <option style="color:#666666;font-size:27.3px;" value="{{true}}" selected="{{infos.gender===true}}">女士</option>
                </select>
            </div>
        </div>
        <div class="account-btn-box" onclick="editRequest">
            <text class="account-btn" >确认</text>
        </div>
    </div>
</template>

<style>
    .container {
        flex-direction: column;
        justify-content: center;
        align-content: center;
        align-items: center;
        background-color: #ffffff;
    }
    .top-content{
        flex-direction: column;
        justify-content: center;
        align-content: center;
        margin-left: 20px;
        margin-right: 20px;
    }
    .account-item {
        flex-direction: column;
        margin-top: 20px;
    }
    .poster-item {
        width: 100%;
        flex-direction: column;
        justify-content: center;
        align-content: center;
    }
    .icon {
        width: 250px;
        height: 250px;
        object-fit: cover;
        border-radius: 125px;
        border-color: #dc143c;
        border-width: 5px;
        margin: 40px 230px 40px 230px;
    }
    .a_item {
        text-align: center;
        background-color: rgba(0, 0, 0, 0);
        height: 60px;
        width: 100%;
        padding: 20px 20px;
        font-size: 35px;
        color: #0066ff;
        lines: 1;
    }
    .account-subtitle {
        width: 147px;
        font-size: 31.3px;
        color: gray;
    }
    .account-input {
        height: 67px;
        flex: 1;
        font-size: 31.3px;
        color: #1A1A1A;
        border-bottom-width: 1px;
    }
    .selection {
        border-bottom-width: 1px;
    }
    .account-btn-box {
        margin-top: 50px;
        margin-bottom: 150px;
    }
    .account-btn {
        padding: 20px 155px;
        margin: 0px 188px 0px 188px;
        font-size: 31.3px;
        color: #ffffff;
        background-color: #0066ff;
        border-radius: 8.3px;
    }
</style>

<script>
    import media from '@system.media'
    import prompt from '@system.prompt'
    import request from '@system.request'
    import fetch from '@system.fetch'
    import router from '@system.router'

    const CryptoJS = require("../../node_modules/crypto-js");
    const SecretId = 'AKIDz5p6FkpkyaY8HZTzMvpEmn1vUUeUsZ4w';
    const SecretKey = '45XrRwHdsCRdu7B5rfOwtmbIvbxADxZ4';
    const bucket = 'lucaszhao-1258906334';
    const period = 3600;

    module.exports = {
        props: [
            'userinfos'
        ],
        data: {
            iconuri: '',
            focusItem: -1,
            inputURI: '',
            infos: {},
            inputName: '',
            inputUserName: '',
            inputEmail: '',
            inputBio: '',
            inputGender: '',
            inputPhoneNum: '',
            directory: ''
        },
        onInit: function () {
          this.$page.setTitleBar({backgroundColor: '#ffffff', textColor: '#000000'});
            this.infos = JSON.parse(this.userinfos);
            this.iconuri = this.infos.postericon;
            this.inputName = this.infos.name;
            this.inputUserName = this.infos.username;
            this.inputEmail = this.infos.email;
            this.inputBio = this.infos.bio;
            this.inputGender = this.infos.gender;
            this.inputPhoneNum = this.infos.phonenum;
            this.directory = 'stack/' + this.infos.phonenum + '/';
            this.$watch('inputURI', 'handleEdit');
        },
        handleEdit: function (newVal, oldVal) {
            console.log(typeof(this.inputGender));
            if (newVal !== '') {
                var data = {"phoneNum":this.inputPhoneNum,"password":"","name":this.inputName!==''?this.inputName:this.infos.name,"email":this.inputEmail!==''?this.inputEmail:this.infos.email,"gender":this.inputGender==="false"?0:1,"photo":this.inputURI,"username":this.inputUserName!==''?this.inputUserName:this.infos.username,"bio":this.inputBio!==''?this.inputBio:this.infos.bio};
                var that = this;
                fetch.fetch({
                    url: "http://101.132.227.218:8080/stackUserManagement/updateUserInfo",
                    data: data,
                    responseType: 'json',
                    method: 'post',
                    success: function (data) {
                        console.log("fetch.fetch success");
                        var code = data.data.errNo;
                        console.log(data.data);
                        if (code === "200") {
                            prompt.showToast({ message: '修改成功' })
                            getApp().$def.data.username = that.inputUserName!==''?that.inputUserName:that.infos.username;
                            getApp().$def.data.iconuri = that.inputURI;
                            router.replace({
                                uri: '/Main',
                                params: { index: 4 }
                            })
                        } else if (code === "404") {
                            prompt.showToast({ message: '您已注销账号，请重新注册' })
                        }
                    },
                    fail: function (errmsg, errcode) {
                        console.log("fetch.fetch fail " + errcode);
                        console.log(errmsg);
                        prompt.showToast({ message: "网络错误", image: '/Common/logo.png' });
                    },
                    complete: function () {
                        that.inputURI = '';
                    }
                });
            }
        },
        onFocusName: function () {
            this.focusItem = 0;
        },
        onFocusUserName: function () {
            this.focusItem = 1;
        },
        onFocusEmail: function () {
            this.focusItem = 2;
        },
        onFocusBio: function () {
            this.focusItem = 3;
        },
        onBlur: function () {
            this.focusItem = -1;
        },
        getName: function (e) {
            this.inputName = e.value;
        },
        getUserName: function (e) {
            this.inputUserName = e.value;
        },
        getEmail: function (e) {
            this.inputEmail = e.value;
        },
        getBio: function (e) {
            this.inputBio = e.value;
        },
        getGender: function (e) {
            this.inputGender = e.newValue;
        },
        editRequest: function () {
            if (this.iconuri !== this.infos.postericon) {
                var that = this;
                var date = new Date();
                var StartTimestamp = Math.floor(date.getTime() / 1000);
                var EndTimestamp = StartTimestamp + period;
                var KeyTime = StartTimestamp + ';' + EndTimestamp;
                var SignKey = CryptoJS.HmacSHA1(KeyTime, SecretKey).toString();
                var Policy = JSON.stringify({
                    "expiration": "2050-01-01T00:00:00.000Z",
                    "conditions": [
                        { "bucket": bucket },
                        { "q-sign-algorithm": "sha1" },
                        { "q-ak": SecretId },
                        { "q-sign-time": KeyTime }
                    ]
                });
                var StringToSign = CryptoJS.SHA1(Policy).toString();
                var Signature = CryptoJS.HmacSHA1(StringToSign, SignKey).toString();
                var words = CryptoJS.enc.Utf8.parse(Policy);
                var base64 = CryptoJS.enc.Base64.stringify(words);
                request.upload({
                    "url": 'https://lucaszhao-1258906334.cos.ap-guangzhou.myqcloud.com',
                    "files": [
                        {
                            uri: that.iconuri
                        }
                    ],
                    "data": [
                        {
                            "name": "key",
                            "value": that.directory + "${filename}"
                        },
                        {
                            "name": "policy",
                            "value": base64
                        },
                        {
                            "name": "q-sign-algorithm",
                            "value": "sha1"
                        },
                        {
                            "name": "q-ak",
                            "value": SecretId
                        },
                        {
                            "name": "q-key-time",
                            "value": KeyTime
                        },
                        {
                            "name": "q-signature",
                            "value": Signature
                        }
                    ],
                    success: function (data) {
                        console.log("request.upload success (" + data.code + ")");
                        console.log(data.data);
                        console.log(data.headers.Location);
                        that.inputURI = data.headers.Location;
                    },
                    fail: function (errmsg, errcode) {
                        console.log("request.upload fail (" + errcode + ")");
                        console.log(errmsg);
                        prompt.showToast({ message: '网络错误', image: '/Common/logo.png' });
                    }
                });
            } else {
                this.inputURI = this.iconuri;
            }
        },
        pickPhoto: function () {
            var that = this;
            media.pickImage({
                success: function (data) {
                    that.iconuri = data.uri;
                    console.log('media.pickImage success');
                },
                fail: function (errmsg, errcode) {
                    prompt.showToast({ message: "选取失败", image: '/Common/logo.png' });
                    console.log('media.pickImage fail ' + errcode);
                    console.log(errmsg);
                }
            })
        },
        viewPhoto: function () {
            var that = this;
            media.previewImage({
                current: that.iconuri,
                uris: [that.iconuri],
                success: function () {
                    console.log('media.previewImage success');
                },
                fail: function (errmsg, errcode) {
                    console.log('media.previewImage fail ' + errcode);
                    console.log(errmsg);
                }
            });     
        }
    }
</script>