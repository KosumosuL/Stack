<template> 
    <div class="container">
        <div class="camera" show={{show}}>
            <image src={{displayuri}} class="image image-cover" onclick="viewPhoto" onlongpress="undoPhoto" />
        </div>
        <div class="image-wall">
            <div class="image-wall-container">
                <div class="image-wall-list">
                    <div for={{uris}} class="image-wall-product" >
                        <image class="image-wall-image" src="{{$item}}" onclick="selectPhoto(this)" onlongpress="deletePhoto(this)" />
                    </div>
                </div>
            </div>
        </div>
        <div class="list-center" show={{show}}>
            <image src="/Photo/img/takePhoto.png" class="btn image-contain" onclick="takePhoto" />
            <image src="/Photo/img/pickPhoto.png" class="btn image-contain" onclick="pickPhoto" />
            <image src="/Photo/img/editPhoto.png" class="btn image-contain" onclick="editPhoto" />
            <image src="/Photo/img/clearPhoto.png" class="btn image-contain" onclick="clearPhoto" />
            <image src="/Photo/img/uploadPhoto.png" class="btn image-contain" onclick="uploadPhoto" />
        </div>
    </div>
</template>

<style>
    .container{
        flex-direction: column;
        justify-content: center;
        align-content: center;
        align-items: center;
        background-color: #ffffff;
    }
    .camera {
        top: 64px;
        height: 800px;
        position: fixed;
    }
    .image {
        width: 100%;
        height: 100%;
        background-color:#ffffff;
    }
    .image-wall {
        margin-top: 865px;
        margin-bottom: 100px;
    }
    .image-wall-container {
		flex-direction: column;
		width: 100%;
	}
	.image-wall-list {
		flex-wrap: wrap;
	}
	.image-wall-product {
		height: 187.5px;
		width: 25%;
	}
	.image-wall-image {
		object-fit: cover;
		height: 100%;
		width: 100%;
        margin: 1px 1px 1px 1px;
        background-color: #ffffff;
	}
    .list-center {
        position: fixed;
        bottom: 0px;
        justify-content: space-between;
        background-color: #f2f2f2;
        width: 100%;
        height: 100px;
    }
    .btn {
        width: 64px;
        height: 64px;
        margin-left: 40px;
        margin-right: 40px;
        margin-top: 16px;
    }
    .image-contain {
        object-fit: contain;
    }
    .image-cover {
        object-fit: cover;
    }
</style>

<script>
    import media from '@system.media'
    import prompt from '@system.prompt'
    import image from '@system.image'
    import request from '@system.request'

    const CryptoJS = require("../../node_modules/crypto-js");
    const SecretId = 'AKIDz5p6FkpkyaY8HZTzMvpEmn1vUUeUsZ4w';
    const SecretKey = '45XrRwHdsCRdu7B5rfOwtmbIvbxADxZ4';
    const bucket = 'lucaszhao-1258906334';
    const directory = 'test/';
    const period = 3600;

    export default {
        props: [
            'show'
        ],
        data: {
            uris: [],
            idx: -1,
            displayuri: '',
            backup: []
        },
        takePhoto: function () {
            var that = this;
            media.takePhoto({
                success: function (data) {
                    that.uris.push(data.uri);
                    that.idx = that.uris.length - 1;
                    that.displayuri = data.uri;
                    that.backup = [];
                    console.log('media.takePhoto success');
                },
                fail: function (errmsg, errcode) {
                    prompt.showToast({ message: '拍摄失败', image: '/Common/logo.png' });
                    console.log('media.takePhoto fail (' + errcode + ') ' + errmsg);
                }
            })
        },
        pickPhoto: function () {
            var that = this;
            media.pickImage({
                success: function (data) {
                    that.uris.push(data.uri);
                    that.idx = that.uris.length - 1;
                    that.displayuri = data.uri;
                    that.backup = [];
                    console.log('media.pickImage success');
                },
                fail: function (errmsg, errcode) {
                    prompt.showToast({ message: "选取失败", image: '/Common/logo.png' });
                    console.log('media.pickImage fail (' + errcode + ') ' + errmsg);
                }
            })
        },
        editPhoto: function () {
            if (this.displayuri !== '') {
                var that = this;
                image.editImage({
                    uri: that.displayuri,
                    success: function (data) {
                        that.uris.splice(that.idx, 1, data.uri);
                        that.backup.push(that.displayuri);
                        that.displayuri = data.uri;
                        console.log('image.editImage success');
                    },
                    fail: function (errmsg, errcode) {
                        prompt.showToast({ message: "编辑失败", image: '/Common/logo.png' });
                        console.log('media.editImage fail (' + errcode + ') ' + errmsg);
                    }
                })    
            }
        },
        uploadPhoto: function () {
            if (this.uris.length !== 0) {
                var that = this;
                var date = new Date();
                var StartTimestamp = date.getTime() / 1000;
                var EndTimestamp = StartTimestamp + period;
                var KeyTime = StartTimestamp + ';' + EndTimestamp;
                var SignKey = CryptoJS.HmacSHA1(KeyTime, SecretKey).toString();
                var Policy = JSON.stringify({
                    "expiration": "2050-01-01T00:00:00.000Z",
                    "conditions": [
                        { "bucket": bucket },
                        { "q-sign-algorithm": "sha1" },
                        { "q-ak": SecretId },
                        { "q-sign-time": KeyTime }
                    ]
                });
                var StringToSign = CryptoJS.SHA1(Policy).toString();
                var Signature = CryptoJS.HmacSHA1(StringToSign, SignKey).toString();
                var words = CryptoJS.enc.Utf8.parse(Policy);
                var base64 = CryptoJS.enc.Base64.stringify(words);
                console.log("request");
                request.upload({
                    "url": 'https://lucaszhao-1258906334.cos.ap-guangzhou.myqcloud.com',
                    "files": that.uris.map(that.mapUri),
                    "data": [
                        {
                            "name": "key",
                            "value": directory + "${filename}"
                        },
                        {
                            "name": "policy",
                            "value": base64
                        },
                        {
                            "name": "q-sign-algorithm",
                            "value": "sha1"
                        },
                        {
                            "name": "q-ak",
                            "value": SecretId
                        },
                        {
                            "name": "q-key-time",
                            "value": KeyTime
                        },
                        {
                            "name": "q-signature",
                            "value": Signature
                        }
                    ],
                    success: function (data) {
                        console.log("request.upload success (" + data.code + ") " + data.data);
                    },
                    fail: function (errmsg, errcode) {
                        console.log("request.upload fail (" + errcode + ") ");
                        console.log(errmsg);
                    }
                });
            }
        },
        clearPhoto: function () {
            if (this.uris.length !== 0) {
                this.uris = [];
                this.idx = -1;
                this.displayuri = '';
                this.backup = [];
                prompt.showToast({ message: "清空相片" });    
            }
        },
        viewPhoto: function () {
            if (this.displayuri !== '') {
                var that = this;
                media.previewImage({
                    current: that.displayuri,
                    uris: that.uris,
                    success: function () {
                        console.log('previewImage success');
                    },
                    fail: function (errmsg, errcode) {
                        console.log('previewImage fail (' + errcode + ') ' + errmsg);
                    }
                });     
            }
        },
        selectPhoto: function (obj) {
            if (this.idx !== obj.$idx) {
                this.idx = obj.$idx;
                this.displayuri = this.uris[this.idx];
                this.backup = [];    
            }
        },
        deletePhoto: function (obj) {
            var that = this;
            prompt.showDialog({
                message: '删除该相片？',
                buttons: [
                    {
                        text: '确认',
                        color: '#33dd44'
                    },
                    {
                        text: '取消',
                        color: '#33dd44'
                    }
                ],
                success: function (data) {
                    console.log("prompt.showDialog success");
                    if (data.index === 0) {
                        that.uris.splice(obj.$idx, 1);
                        if (that.uris.length === 0) {
                            that.idx = -1;
                            that.displayuri = '';
                            that.backup = [];
                        } else if (that.idx > obj.$idx) {
                            that.idx -= 1;
                        } else if (that.idx === obj.$idx) {
                            if (that.idx >= that.uris.length) {
                                that.idx = that.uris.length - 1;
                            }
                            that.displayuri = that.uris[that.idx];
                            that.backup = [];
                        }
                    }
                },
                fail: function (errmsg, errcode) {
                    console.log("prompt.showDialog fail (" + errcode + ") " + errmsg);
                }
            });
        },
        undoPhoto: function () {
            var that = this;
            if (this.backup.length !== 0) {
                prompt.showDialog({
                    message: '取消编辑？',
                    buttons: [
                        {
                            text: '确认',
                            color: '#33dd44'
                        },
                        {
                            text: '取消',
                            color: '#33dd44'
                        }
                    ],
                    success: function (data) {
                        console.log("prompt.showDialog success");
                        if (data.index === 0) {
                            that.uris.splice(that.idx, 1, that.backup.pop());
                            that.displayuri = that.uris[that.idx];
                        }
                    },
                    fail: function (errmsg, errcode) {
                        console.log("prompt.showDialog fail (" + errcode + ") " + errmsg);
                    }
                }); 
            }
        },
        mapUri: function (item) {
            return {
                uri: item
            }
        }
    }
</script>